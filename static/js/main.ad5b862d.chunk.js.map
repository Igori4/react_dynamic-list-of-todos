{"version":3,"sources":["ListItems.js","api.js","ToDo.js","todoService.js","App.js","index.js"],"names":["ListItems","props","todos","sortTodos","react_default","a","createElement","className","onClick","map","todo","key","id","type","checked","completed","onChange","title","user","name","completedSort","sortField","sort","b","titleSort","nameSort","ToDo","state","load","copyTodos","_this","setState","Promise","all","fetch","then","response","json","users","items","this","getTodoWithUser","Object","objectSpread","find","userId","src_ListItems","React","Component","App","src_ToDo","ReactDOM","render","src_App","document","getElementById"],"mappings":"+QAyCeA,MAvCf,SAAmBC,GAAO,IAChBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UAEb,OACIC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIE,QAAS,WACTL,EAAU,eADd,QAGAC,EAAAC,EAAAC,cAAA,MAAIE,QAAS,WACTL,EAAU,WADd,QAGAC,EAAAC,EAAAC,cAAA,MAAIE,QAAS,WACTL,EAAU,UADd,UAKRC,EAAAC,EAAAC,cAAA,aACKJ,EAAMO,IAAI,SAAAC,GACP,OAAON,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAKE,IACjBR,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOO,KAAK,WAAWC,QAASJ,EAAKK,UAAWC,SAAU,iBAAI,OAGlEZ,EAAAC,EAAAC,cAAA,UACKI,EAAKO,OAGVb,EAAAC,EAAAC,cAAA,UACKI,EAAKQ,KAAKC,YChC1BC,EAAgB,SAAClB,EAAOmB,GACjCnB,EAAMoB,KAAK,SAACjB,EAAGkB,GACX,OAAIlB,EAAEgB,GAAaE,EAAEF,GACV,EAGPhB,EAAEgB,GAAaE,EAAEF,IACT,EAEL,KAIFG,EAAY,SAACtB,EAAOmB,GAC7BnB,EAAMoB,KAAK,SAACjB,EAAGkB,GACX,OAAIlB,EAAEgB,GAAaE,EAAEF,GACV,EAGPhB,EAAEgB,GAAaE,EAAEF,IACT,EAEL,KAIFI,EAAW,SAACvB,EAAOmB,GAC5BnB,EAAMoB,KAAK,SAACjB,EAAGkB,GACX,OAAIlB,EAAEgB,GAAWF,KAAOI,EAAEF,GAAWF,KAC1B,EAGPd,EAAEgB,GAAWF,KAAOI,EAAEF,GAAWF,MACzB,EAEL,KCsBAO,6MA/CXC,MAAQ,CACJzB,MAAO,GACP0B,MAAM,KAaVzB,UAAY,SAACkB,GACT,IAAIQ,EAAYC,EAAKH,MAAMzB,MAET,cAAdmB,GACAD,EAAcS,EAAWR,GAEX,UAAdA,EACAG,EAAUK,EAAWR,GAErBI,EAASI,EAAWR,GAGxBS,EAAKC,SAAS,CACV7B,MAAO2B,8NAvBkBG,QAAQC,IAAI,CCdtCC,MAAM,8CACRC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAIxBH,MAAM,8CACRC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,8CDQpBnC,OAAOoC,OAEVC,EAAQC,KAAKC,gBAAgBH,EAAOpC,GAExCsC,KAAKT,SAAS,CACV7B,MAAOqC,EACPX,MAAM,8IAqBEU,EAAOpC,GACnB,OAAOA,EAAMO,IAAI,SAAAC,GAAI,OAAAgC,OAAAC,EAAA,EAAAD,CAAA,GACdhC,EADc,CAEjBQ,KAAMoB,EAAMM,KAAK,SAAA1B,GAAI,OAAIA,EAAKN,KAAOF,EAAKmC,8CAIzC,IACC3C,EAAUsC,KAAKb,MAAfzB,MACN,OACIsC,KAAKb,MAAMC,KAAOxB,EAAAC,EAAAC,cAACwC,EAAD,CAAW3C,UAAWqC,KAAKrC,UAAWD,MAAOA,IAAY,oBA3CpE6C,IAAMC,WEGVC,MARf,WACE,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC4C,EAAD,QCFLC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ad5b862d.chunk.js","sourcesContent":["import React from 'react'\n\nfunction ListItems(props) {\n    let { todos, sortTodos } = props;\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th onClick={() => {\n                        sortTodos('completed')\n                    }}>Done</th>\n                    <th onClick={() => {\n                        sortTodos('title')\n                    }}>Todo</th>\n                    <th onClick={() => {\n                        sortTodos('user')\n                    }}>User</th>\n                </tr>\n            </thead>\n            <tbody >\n                {todos.map(todo => {\n                    return <tr key={todo.id}>\n                        <td>\n                            <input type='checkbox' checked={todo.completed} onChange={()=>[]} />\n                        </td>\n\n                        <td>\n                            {todo.title}\n                        </td>\n\n                        <td>\n                            {todo.user.name}\n                        </td>\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default ListItems;","export const completedSort = (todos, sortField) => {\n    todos.sort((a, b) => {\n        if (a[sortField] < b[sortField]) {\n            return 1\n        }\n\n        if (a[sortField] > b[sortField]) {\n            return -1\n        }\n        return 0;\n    })\n}\n\nexport const titleSort = (todos, sortField) => {\n    todos.sort((a, b) => {\n        if (a[sortField] > b[sortField]) {\n            return 1\n        }\n\n        if (a[sortField] < b[sortField]) {\n            return -1\n        }\n        return 0;\n    })\n}\n\nexport const nameSort = (todos, sortField) => {\n    todos.sort((a, b) => {\n        if (a[sortField].name > b[sortField].name) {\n            return 1\n        }\n\n        if (a[sortField].name < b[sortField].name) {\n            return -1\n        }\n        return 0;\n    })\n}","import React from 'react'\nimport { getTodos, getUsers } from './todoService'\nimport ListItems from './ListItems'\nimport {\n    completedSort,\n    titleSort,\n    nameSort,\n} from './api'\n\nclass ToDo extends React.Component {\n    state = {\n        todos: [],\n        load: false,\n    }\n    async componentDidMount() {\n        const [todos, users] = await Promise.all([getTodos(), getUsers()])\n\n        let items = this.getTodoWithUser(users, todos);\n\n        this.setState({\n            todos: items,\n            load: true,\n        })\n    }\n\n    sortTodos = (sortField) => {\n        let copyTodos = this.state.todos;\n\n        if (sortField === 'completed') {\n            completedSort(copyTodos, sortField)\n        }\n        if (sortField === 'title') {\n            titleSort(copyTodos, sortField)\n        } else {\n            nameSort(copyTodos, sortField)\n        }\n\n        this.setState({\n            todos: copyTodos\n        })\n    }\n\n    getTodoWithUser(users, todos) {\n        return todos.map(todo => ({\n            ...todo,\n            user: users.find(user => user.id === todo.userId)\n        }))\n    }\n\n    render() {\n        let { todos } = this.state;\n        return (\n            this.state.load ? <ListItems sortTodos={this.sortTodos} todos={todos} /> : '...Loading'\n        )\n    }\n}\n\nexport default ToDo","export const getTodos = function() {\n    return fetch('https://jsonplaceholder.typicode.com/todos')\n        .then(response => response.json())\n}\n\nexport const getUsers = function() {\n    return fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n}","import React from 'react';\nimport './App.css';\nimport ToDo from './ToDo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ToDo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}